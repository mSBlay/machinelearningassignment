## Loading the package and set seed
set.seed(12345)
library(caret)
## Download and submit data
url_train <- “https://d396qusza40orc.cloudfront.net/predmachlearn/pml-training.csv”
rawdata <- read.csv(url_train, na.strings = c(“”, “NA”))
url_submit <- “https://d396qusza40orc.cloudfront.net/predmachlearn/pml-testing.csv”
submit_data <- read.csv(url_submit, na.strings = c(“”, “NA”))
## Cleaning data: Delete NAs and unrelated variables 
colname <- colnames(rawdata)[!colSums(is.na(rawdata)) > 0]
colname
## slice data related with exercise 
colname <- colname[8: lenght(colname)]
df_wo_NA <- rawdata[colname]
## check the columns of df_wo_NA is in submit_data
## the last colname is "classe"
is.element(colname, colname(submit_data))
## split data into random train and test 
inTrain = createDataPartition(df_wo_NA$classe, p = 3/4)[[1]]
training = df_wo_NA[ inTrain, ]
testing = df_wo_NA[ -inTrain, ]
## we use Random Forest 
model_rf <- train(classe ~ ., data=training, method = "rf")
pred_rf <- predict(model_rf, testing)
confusionMatrix(testing$classe, pred_rf)
## linear discreiminant Analysis
model_lda <- train(classe ~ ., data=training, method = "lda")
pred_lda <- predict(model_lda, testing)
confusionMatrix(testing$classe, pred_lda)
## recursive partitioning and regression trees
model_rpart <- train(classe ~ ., data=training, method = "rpart")
pred_rpart <- predict(model_rpart, testing)
confusionMatrix(testing$classe, pred_rpart)
## plotting
library(rattle)
fancyRpratPlot(model_rpart$finalModel)
## submit
submit_rf <- predict(model_rf, submit_data)
submit_rf



